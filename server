#include<stdio.h>
#include<string.h>  
#include<sys/socket.h>
#include<arpa/inet.h>   
#include<unistd.h>  

int main(int argc , char *argv[])
{
    int sock_id , client_sock , c , read_size;
    struct sockaddr_in server , client;
    char buffer[256];

    //Create socket
    sock_id = socket(AF_INET , SOCK_STREAM , 0);
    if (sock_id == -1)
    {
        printf("Could not create socket");
    }
    puts("Socket created");

    //Prepare the sockaddr_in structure
    server.sin_family = AF_INET;
    server.sin_addr.s_addr = INADDR_ANY;
    server.sin_port = htons( 8888 );

    //Bind
    if( bind(sock_id,(struct sockaddr *)&server , sizeof(server)) < 0)
    {
        //print the error message
        perror("bind failed. Error");
        return 1;
    }
    puts("bind done");

    //Listen
    listen(sock_id , 3);

    //Accept and incoming connection
    puts("Waiting for incoming connections...");
    c = sizeof(struct sockaddr_in);

    //accept connection from an incoming client
    client_sock = accept(sock_id, (struct sockaddr *)&client, (socklen_t*)&c);
    if (client_sock < 0)
    {
        perror("accept failed");
        return 1;
    }
    puts("Connection accepted");

    //Receive a message from client
    while( (read_size = recv(client_sock ,buffer, 2000 , 0)) > 0 )
    {
     
      puts("client message:");
      puts(buffer);
    }

    if(read_size == 0)
    {
        puts("Client disconnected");
    }
    
    
    

    return 0;
}
